$(document).ready(function() {

	
	$("button.fullscreen").on('click', function() {
	    var docElement, request;

	    docElement = document.documentElement;
	    request = docElement.requestFullScreen || docElement.webkitRequestFullScreen || docElement.mozRequestFullScreen || docElement.msRequestFullScreen;

	    if(typeof request!="undefined" && request){
	        request.call(docElement);
	    }
	    
	    $("#startpage").addClass("display-none");
	});
	
// 'bigdata%20currency'
	
var searchTerm = 'data',
cloudStarted = false,
numOfCharsToShowInCloud = 28, //How many characters of each tweet to be shown in cloud
numOfTweets = 38,
n = 0,
maxLimitOfTweetsToShow = 32,
canvas = document.getElementById('myCanvas'),
$list = $('#tags ul'),
$num = $('#num'),
timeInSecondsToGetNewTweets = 600,
searchPart = '?q=' + searchTerm + '+exclude:retweets&include_entities=false&count=' + numOfTweets,
orgSearch = searchPart,
url = 'https://markussteiger.ch/projekte/cb/000/tweetload.php',
g1 = {
    0:   '#ffffff',
    0.5: '#ffffff',
    1:   '#ffffff'
},
		
cloudOptions = { //options list at: http://www.goat1000.com/tagcanvas-options.php
    weight: true,
    weightMode:'both',
    weightSizeMax: 32,
	weightSizeMin: 12,
   	//weightSize: tagFontSize,
    weightGradient:g1,
    weightFrom: 'data-font',
    tooltip: 'div',
    interval: 10,
    minSpeed: 0.05,
    maxSpeed: 0.07,
    initial: [0.07, -0.1],
    fadeIn: 500,
    //textColour: '#65B3B5',
    shadow: "#000000",
    textFont: 'Roboto',
    bgOutline: '#fff',
    outlineColour: '#FF0000',
    outlineThickness: 9,
    pulsateTo: 0.4,
    shape: 'vcylinder',//'vcylinder','sphare'
    pulsateTime: 2,
    // shuffleTags: true,
    freezeActive: true,
    reverse: true,
    zoom: 1
    // tooltipClass: 'tooltip'
}

//Set height and width of cloud to the size of window
canvas.width = window.innerWidth;
canvas.height = window.innerHeight;

// canvas.width = window.innerWidth * 0.8;



function loadTweets() {
if (!searchPart) searchPart = orgSearch
$.get(url + searchPart, function (data) {
    $('.loader').fadeIn(4000, function(){ $(this).remove(); });
    searchPart = data.search_metadata.next_results;
    var newTweetsAdded = 0;
    
    
    
    
    $.each(data.statuses, function () {

        if ($list.find('#' + this.id_str).length == 0) { //don't ad tweet which is already there

        	var retweets = parseInt(this.retweet_count);
        	var favorites = parseInt(this.favorite_count / 2);
        	var followers = parseInt(this.user.followers_count);
        	var following = parseInt(this.user.friends_count);

        	var bigPlayer = Number(1 + retweets + favorites);

        	
            $('<li>').attr('id', this.id_str).append(
                    '<a style="color: #fff !important;" class="tagger" data-font=' + bigPlayer + ' data-weight="'
                        + this.text + '">' + this.text.substring(0, numOfCharsToShowInCloud) 
                        // + this.text + '" href="javascript:void(0)">' + this.text.substring(0, numOfCharsToShowInCloud) 
                    + '...</a>'
                
            
            ).appendTo($list);
            newTweetsAdded++;
        }
        n++;
    });

    function limitCheck() {
        //console.log($list.find('li').length > maxLimitOfTweetsToShow)
        return $list.find('li').length > maxLimitOfTweetsToShow;
    }

    //remove some tweets if limit is over
    if (limitCheck()) {
        $list.find('li').slice(0, newTweetsAdded).remove();
    }

  //now the cloud thing
    if (!cloudStarted) {
        cloudStarted = true;
        TagCanvas.Start('myCanvas', 'tags', cloudOptions);
    } else {
        TagCanvas.Update('myCanvas');
    }

    setTimeout(loadTweets, timeInSecondsToGetNewTweets * 1000);

});
}
//start
//loadTweets();

var i = 0;
setInterval(function () {
if (i + 1 < n) {
    $num.html(i + 1);
    i++;
}
}, 150);










});
